#!/bin/sh
# Install the tpm2_unseal and direct access library
# into the initramdisk so that it can be used to
# unseal the disk encryption key
#
# The tpm2_unseal program uses dlopen() to load the raw device
# library, so it is necessary to explicitly copy it as well.
#
# This script should be copied to /etc/initramfs-tools/hooks/tpm2
# (or a symlink from there to here):
# ln -s `pwd`/initramfs-unseal-hook /etc/initramfs-tools/hooks/tpm2
#
# turn off "expressions don't expand in single quotes" and "can't follow non-constant sources"
# shellcheck disable=SC2016,SC1090,SC1091

set -e

if [ "$1" = "prereqs" ]; then
	exit 0
fi

. /usr/share/initramfs-tools/hook-functions

DIR="/etc/safeboot"
[ -r "$DIR/safeboot.conf" ] && . "$DIR/safeboot.conf"
[ -r "$DIR/local.conf" ] && . "$DIR/local.conf"

copy_exec /usr/bin/sha256sum
copy_exec /usr/sbin/tpm2-totp
copy_exec /usr/sbin/tpm2
copy_exec /lib/x86_64-linux-gnu/libtss2-tcti-device.so.0

# Move the configuration and keys into the initrd as well
copy_file safeboot "$DIR/safeboot.conf"
copy_file safeboot-keys "$(dirname "$CERT")/$(basename "$CERT" .pem).pub" "$DIR/cert.pub"

if [ -r "$DIR/local.conf" ]; then
	copy_file safeboot-local "$DIR/local.conf"
fi

# If there are sealed LUKS secrets, move them too
if [ -r "$DIR/sealed.public" ]; then
	copy_file safeboot-sealed "$DIR/sealed.policy"
	copy_file safeboot-sealed "$DIR/sealed.public"
	copy_file safeboot-sealed "$DIR/sealed.secret"
fi
